GLODEF:	//GLOBAL ADRESS
	CONTROLDEUID	EQU	001H
	CONTROLCDSTR	EQU	037H
	DOORDEUID	EQU	002H
	DOORMOTION	EQU	020H
	CLOCKDEUID	EQU	003H
	CLOCKSMODE	EQU	020H
	CLOCKMONTH	EQU	030H
	CLOCKDATE	EQU	031H
	CLOCKHOUR	EQU	032H
	CLOCKMINUTE	EQU	033H
	CLOCKALM01M	EQU	040H
	CLOCKALM01H	EQU	041H
	CLOCKALM02M	EQU	042H
	CLOCKALM02H	EQU	043H
	CLOCKALM03M	EQU	044H
	CLOCKALM03H	EQU	045H
	CLOCKALM04M	EQU	046H
	CLOCKALM04H	EQU	047H
	WINDOWDEUID	EQU	004H
	WINDOWMOTION	EQU	020H
	RINGDEUID	EQU	005H
	RINGMOTION	EQU	020H
	RINGSNONCH	EQU	038H
	//SERIAL SETUP
	;DEVICEID	EQU	0XXH
	CANRETCODE	EQU	0FEH
	CNTRETCODE	EQU	0FFH
	REPLACECODE	EQU	000H
	CLRCODE		EQU	001H
	SETBCODE	EQU	002H
	CPLCODE		EQU	003H
	SPRSERIAL	EQU	P3
	SPBSERIALTR	EQU	SPRSERIAL.2
	STATE		EQU	070H
	MOTION		EQU	071H
	POSITION	EQU	072H
	STORESSTART	EQU	078H
	STORESEND	EQU	07FH
	STORE0START	EQU	060H
	STORE1START	EQU	068H
	STORE2START	EQU	050H
	STORE3START	EQU	058H
	FLSSERIALMO	EQU	02EH
	FLBSERIALRET	EQU	FLSSERIALMO.0
	FLSSERIAL	EQU	02FH
	FLBRUNEMPTY	EQU	FLSSERIAL.0
	FLBWRITING	EQU	FLSSERIAL.1
	FLBSTORESTR	EQU	FLSSERIAL.2
	FLBSTORE0TR	EQU	FLSSERIAL.4
	FLBSTORE1TR	EQU	FLSSERIAL.5
	FLBSTORE2TR	EQU	FLSSERIAL.6
	FLBSTORE3TR	EQU	FLSSERIAL.7
	SFRPORT0	EQU	080H
	SFRPORT1	EQU	090H
	SFRPORT2	EQU	0A0H
	//DEFINE TIMER 2 (PWM)
	T2CON		EQU	0C8H
	TF2		EQU	T2CON.7
	TR2		EQU	T2CON.2
	CPRL2		EQU	T2CON.0
	RCAP2L		EQU	0CAH
	RCAP2H		EQU	0CBH
	TL2		EQU	0CCH
	TH2		EQU	0CDH
	ET2		EQU	IE.5
DEUDEF:	//DEFINE CONST
	DEVICEID	EQU	001H
	MODEROWSEL	EQU	000H
	MODEROW1SEL	EQU	001H
	MODEROW2SEL	EQU	002H
	MODEROW3SEL	EQU	003H
	MODEROW4SEL	EQU	004H
	;MODEROW5SEL	EQU	005H
	;MODEROW6SEL	EQU	006H
	;MODEROW7SEL	EQU	007H
	MODERINGOFF	EQU	010H
	;MODENONE11H	EQU	011H
	MODEDOORSET	EQU	012H
	MODEWINDSET	EQU	013H
	;MODENONE14H	EQU	014H
	;MODENONE15H	EQU	015H
	MODETIMESET	EQU	016H
	MODEMONDATSET	EQU	060H
	MODEHORMINSET	EQU	061H
	MODEALARMST	EQU	017H
	MODEALARM1SET	EQU	070H
	MODEALARM2SET	EQU	071H
	MODEALARM3SET	EQU	072H
	MODEALARM4SET	EQU	073H
	/*
	MODENONE18H	EQU	018H
	MODENONE19H	EQU	019H
	MODENONE1AH	EQU	01AH
	MODENONE1BH	EQU	01BH
	MODENONE1CH	EQU	01CH
	MODENONE1DH	EQU	01DH
	MODENONE1EH	EQU	01EH
	MODENONE1FH	EQU	01FH
	*/
	//DEFINE ADRESS
	FLBSERBACK	EQU	FLSSERIALMO.0
	FLBSERGORING	EQU	FLSSERIALMO.1
	FLBSERGODOOR	EQU	FLSSERIALMO.2
	LEDDISSEL	EQU	P0
	BUTTONS		EQU	P1
	LEDDISPLAY	EQU	P2
	MODENOW		EQU	030H
	MODESTORE	EQU	031H
	NUMBER0		EQU	032H
	NUMBER1		EQU	033H
	NUMBER2		EQU	034H
	NUMBER3		EQU	035H
	CONDISTORE	EQU	037H	;GLOBAL
	LEDDISPL0	EQU	038H
	LEDDISPL1	EQU	039H
	LEDDISPL2	EQU	03AH
	LEDDISPL3	EQU	03BH
	LEDDISPL4	EQU	03CH
	LEDDISPL5	EQU	03DH
	LEDDISPL6	EQU	03EH
	LEDDISPL7	EQU	03FH
	ROW0STORE	EQU	040H
	ROW1STORE	EQU	041H
	ROW2STORE	EQU	042H
	ROW3STORE	EQU	043H
	ROW4STORE	EQU	044H
	FLSOTHER	EQU	028H
	FLBBUTPRESS	EQU	FLSOTHER.0
	FLBCHEBUTPR	EQU	FLSOTHER.1
	FLBRETBUTPR	EQU	FLSOTHER.2
	FLBLEDALL	EQU	FLSOTHER.5
	FLBLEDNON	EQU	FLSOTHER.6
	FLBSENDRET	EQU	FLSOTHER.7
	LEDSTORE3	EQU	020H
	LEDSTORE4	EQU	021H
	ORG	0000H
		LJMP	START
	ORG	000BH
		LJMP	EAET0
	ORG	0023H
		LJMP	DSPSTA
START:		LCALL	DSRSET
	//NORMAL SETUP
		MOV	TMOD, #00010001B
		MOV	MODENOW, #000H
		LCALL	NUMCLR
		MOV	CONDISTORE, #000H
		MOV	ROW0STORE, #10000011B
		MOV	ROW1STORE, #01000011B
		MOV	ROW2STORE, #00100011B
		MOV	ROW3STORE, #00000000B
		MOV	ROW4STORE, #00000000B
		MOV	FLSOTHER, #000H
		MOV	LEDSTORE3, #000H
		MOV	LEDSTORE4, #000H
		MOV	TH0, #03CH
		MOV	TL0, #0B0H
		SETB	ET0
		SETB	EA
MALOOP:		LCALL	DSSMOV
	//MAIN START
	//INPUT
	DSSME3:	MOV	BUTTONS, #11110111B
		//IF PRESS 1A
		JNB	BUTTONS.7, BUT1AT
		AJMP	BUT1AE
	BUT1AT:	JNB	FLBBUTPRESS, BUT1AS
		LJMP	BUTEND
		;PRESS 1A COMMANDS
	BUT1AS:	LCALL	MOVNUM
		MOV	NUMBER0, #007
		LJMP	BUTPRE
		//IF PRESS 1B
	BUT1AE:	JNB	BUTTONS.6, BUT1BT
		AJMP	BUT1BE
	BUT1BT:	JNB	FLBBUTPRESS, BUT1BS
		LJMP	BUTEND
		;PRESS 1B COMMANDS
	BUT1BS:	LCALL	MOVNUM
		MOV	NUMBER0, #008
		LJMP	BUTPRE
		//IF PRESS 1C
	BUT1BE:	JNB	BUTTONS.5, BUT1CT
		AJMP	BUT1CE
	BUT1CT:	JNB	FLBBUTPRESS, BUT1CS
		LJMP	BUTEND
		;PRESS 1C COMMANDS
	BUT1CS:	LCALL	MOVNUM
		MOV	NUMBER0, #009
		LJMP	BUTPRE
	BUT1CE:	//IF PRESS 1D
		JNB	BUTTONS.4, BUT1DT
		AJMP	BUT1DE
	BUT1DT:	JNB	FLBBUTPRESS, BUT1DS
		LJMP	BUTEND
		;PRESS 1D COMMANDS
	BUT1DS:	JNB	FLBLEDALL, BUT1D0
		CLR	FLBLEDALL
		SETB	FLBLEDNON
		LJMP	BUTPRE
	BUT1D0:	JNB	FLBLEDNON, BUT1D1
		CLR	FLBLEDALL
		CLR	FLBLEDNON
		LJMP	BUTPRE
	BUT1D1:	SETB	FLBLEDALL
		CLR	FLBLEDNON
		LJMP	BUTPRE
	BUT1DE:	MOV	BUTTONS, #11111011B
		//IF PRESS 2A
		JNB	BUTTONS.7, BUT2AT
		AJMP	BUT2AE
	BUT2AT:	JNB	FLBBUTPRESS, BUT2AS
		LJMP	BUTEND
		;PRESS 2A COMMANDS
	BUT2AS:	LCALL	MOVNUM
		MOV	NUMBER0, #004
		LJMP	BUTPRE
		//IF PRESS 2B
	BUT2AE:	JNB	BUTTONS.6, BUT2BT
		AJMP	BUT2BE
	BUT2BT:	JNB	FLBBUTPRESS, BUT2BS
		LJMP	BUTEND
		;PRESS 2B COMMANDS
	BUT2BS:	LCALL	MOVNUM
		MOV	NUMBER0, #005
		LJMP	BUTPRE
		//IF PRESS 2C
	BUT2BE:	JNB	BUTTONS.5, BUT2CT
		AJMP	BUT2CE
	BUT2CT:	JNB	FLBBUTPRESS, BUT2CS
		LJMP	BUTEND
		;PRESS 2C COMMANDS
	BUT2CS:	LCALL	MOVNUM
		MOV	NUMBER0, #006
		LJMP	BUTPRE
	BUT2CE:	//IF PRESS 2D
		JNB	BUTTONS.4, BUT2DT
		AJMP	BUT2DE
	BUT2DT:	JNB	FLBBUTPRESS, BUT2DS
		LJMP	BUTEND
		;PRESS 2D COMMANDS
	BUT2DS:	MOV	LEDSTORE4, #000H
		LJMP	BUTPRE
	BUT2DE:	MOV	BUTTONS, #11111101B
		//IF PRESS 3A
		JNB	BUTTONS.7, BUT3AT
		AJMP	BUT3AE
	BUT3AT:	JNB	FLBBUTPRESS, BUT3AS
		LJMP	BUTEND
		;PRESS 3A COMMANDS
	BUT3AS:	LCALL	MOVNUM
		MOV	NUMBER0, #001
		LJMP	BUTPRE
		//IF PRESS 3B
	BUT3AE:	JNB	BUTTONS.6, BUT3BT
		AJMP	BUT3BE
	BUT3BT:	JNB	FLBBUTPRESS, BUT3BS
		LJMP	BUTEND
		;PRESS 3B COMMANDS
	BUT3BS:	LCALL	MOVNUM
		MOV	NUMBER0, #002
		LJMP	BUTPRE
		//IF PRESS 3C
	BUT3BE:	JNB	BUTTONS.5, BUT3CT
		AJMP	BUT3CE
	BUT3CT:	JNB	FLBBUTPRESS, BUT3CS
		LJMP	BUTEND
		;PRESS 3C COMMANDS
	BUT3CS:	LCALL	MOVNUM
		MOV	NUMBER0, #003
		LJMP	BUTPRE
	BUT3CE:	//IF PRESS 3D
		JNB	BUTTONS.4, BUT3DT
		AJMP	BUT3DE
	BUT3DT:	JNB	FLBBUTPRESS, BUT3DS
		LJMP	BUTEND
		;PRESS 3D COMMANDS
	BUT3DS:	LJMP	BUTPRE
	BUT3DE:	MOV	BUTTONS, #11111110B
		//IF PRESS 4A
		JNB	BUTTONS.7, BUT4AT
		AJMP	BUT4AE
	BUT4AT:	JNB	FLBBUTPRESS, BUT4AS
		LJMP	BUTEND
		;PRESS 4A COMMANDS
	BUT4AS:	SETB	FLBRETBUTPR
		LJMP	BUTPRE
	BUT4AE:	//IF PRESS 4B
		JNB	BUTTONS.6, BUT4BT
		AJMP	BUT4BE
	BUT4BT:	JNB	FLBBUTPRESS, BUT4BS
		LJMP	BUTEND
		;PRESS 4B COMMANDS
	BUT4BS:	LCALL	MOVNUM
		MOV	NUMBER0, #000
		LJMP	BUTPRE
	BUT4BE:	//IF PRESS 4C
		JNB	BUTTONS.5, BUT4CT
		AJMP	BUT4CE
	BUT4CT:	JNB	FLBBUTPRESS, BUT4CS
		LJMP	BUTEND
		;PRESS 4C COMMANDS
	BUT4CS:	SETB	FLBCHEBUTPR
		LJMP	BUTPRE
	BUT4CE:	//IF PRESS 4D
		JNB	BUTTONS.4, BUT4DT
		AJMP	BUT4DE
	BUT4DT:	MOV	R1, #RINGDEUID
		MOV	R2, #000H
		MOV	R3, #RINGMOTION
		MOV	R4, #00000001B
		MOV	R5, #000H
		MOV	R6, #RINGSNONCH
		MOV	R7, #000
		LCALL	DSSWRI
		JNB	FLBBUTPRESS, BUT4DS
		LJMP	BUTEND
		;PRESS 4D COMMANDS
	BUT4DS:	LJMP	BUTPRE
	BUT4DE:	//IF NONE PRESS
		CLR	FLBBUTPRESS
		LJMP	BUTEND
	BUTPRE:	//IF ANY PRESS
		SETB	FLBBUTPRESS
		LJMP	BUTEND
BUTEND:		MOV	A, MODENOW
		JNB	FLBSERBACK, SEBAEN
		SETB	FLBRETBUTPR
		AJMP	SECHEN
	SEBAEN:	JNB	FLBSERGORING, SEGREN
		CLR	FLBSERGORING
		MOV	MODENOW, #MODERINGOFF
		AJMP	SECHEN
	SEGREN:	JNB	FLBSERGODOOR, SECHEN
		CLR	FLBSERGODOOR
		MOV	MODENOW, #MODEDOORSET
	SECHEN:	JNB	FLBLEDALL, CHEDAL
		MOV	LEDDISPL0, #0FFH
		MOV	LEDDISPL1, #0FFH
		MOV	LEDDISPL2, #0FFH
		MOV	LEDDISPL3, #0FFH
		MOV	LEDDISPL4, #0FFH
		LJMP	CHEEND
	CHEDAL:	JNB	FLBLEDNON, CHEDNO
		MOV	LEDDISPL0, #000H
		MOV	LEDDISPL1, #000H
		MOV	LEDDISPL2, #000H
		MOV	LEDDISPL3, #000H
		MOV	LEDDISPL4, #000H
		LJMP	CHEEND
	CHEDNO:	MOV	LEDDISPL3, LEDSTORE3
		MOV	LEDDISPL4, LEDSTORE4
		//ROW SELECT  DNC
		MOV	LEDDISPL1, #00000000B
		MOV	LEDDISPL2, #00000000B
		CJNE	A, #MODEROWSEL, CHESRE
		MOV	LEDDISPL0, #00100000B
		CLR	FLBSERBACK
		JNB	FLBRETBUTPR, CHESRA
	CHESRG:	MOV	MODENOW, #MODEROWSEL
		LJMP	MODCHE
	CHESRA:	MOV	R0, NUMBER0
		LCALL	NUMCLR
		CJNE	R0, #001, CHESR0
		MOV	MODENOW, #MODEROW1SEL
		LJMP	MODCHE
	CHESR0:	CJNE	R0, #003, CHESR1
		MOV	MODENOW, #MODEROW3SEL
		LJMP	MODCHE
	CHESR1:	CJNE	R0, #004, CHESRX
		MOV	MODENOW, #MODEROW4SEL
		LJMP	MODCHE
	CHESRX:	LJMP	CHEEND
		//ROW 1 SELECT  DNC
	CHESRE:	CJNE	A, #MODEROW1SEL, CHER1E
		MOV	LEDDISPL0, #10000000B
		JNB	FLBRETBUTPR, CHER1A
		MOV	MODENOW, #MODEROWSEL
		LJMP	MODCHE
	CHER1A:	MOV	R0, NUMBER0
		LCALL	NUMCLR
		CJNE	R0, #001, CHER10
		MOV	MODENOW, #MODERINGOFF
		LJMP	MODCHE
	CHER10:	CJNE	R0, #003, CHER12
		MOV	MODENOW, #MODEDOORSET
		SETB	TR0
		LJMP	MODCHE
	CHER12:	CJNE	R0, #004, CHER13
		MOV	MODENOW, #MODEWINDSET
		SETB	TR0
		LJMP	MODCHE
	CHER13:	CJNE	R0, #007, CHER14
		MOV	MODENOW, #MODETIMESET
		LJMP	MODCHE
	CHER14:	CJNE	R0, #008, CHER1X
		MOV	MODENOW, #MODEALARMST
		LJMP	MODCHE
	CHER1X:	LJMP	CHEEND
		//LED3 SWICH  DNC
	CHER1E:	CJNE	A, #MODEROW3SEL, CHER3E
		MOV	LEDDISPL0, #00010000B
		JNB	FLBRETBUTPR, CHER3A
		MOV	MODENOW, #MODEROWSEL
		LJMP	MODCHE
	CHER3A:	MOV	A, LEDSTORE3
		MOV	R0, NUMBER0
		LCALL	NUMCLR
		CJNE	R0, #001, CHER30
		CPL	ACC.7
		AJMP	CHER3C
	CHER30:	CJNE	R0, #002, CHER31
		CPL	ACC.6
		AJMP	CHER3C
	CHER31:	CJNE	R0, #003, CHER32
		CPL	ACC.5
		AJMP	CHER3C
	CHER32:	CJNE	R0, #004, CHER33
		CPL	ACC.4
		AJMP	CHER3C
	CHER33:	CJNE	R0, #005, CHER34
		CPL	ACC.3
		AJMP	CHER3C
	CHER34:	CJNE	R0, #006, CHER35
		CPL	ACC.2
		AJMP	CHER3C
	CHER35:	CJNE	R0, #007, CHER36
		CPL	ACC.1
		AJMP	CHER3C
	CHER36:	CJNE	R0, #008, CHER3X
		CPL	ACC.0
		AJMP	CHER3C
	CHER3C:	MOV	LEDSTORE3, A
	CHER3X:	LJMP	CHEEND
		//LED4 SWICH  DNC
	CHER3E:	CJNE	A, #MODEROW4SEL, CHER4E
		MOV	LEDDISPL0, #00001000B
		JNB	FLBRETBUTPR, CHER4A
		MOV	MODENOW, #MODEROWSEL
		LJMP	MODCHE
	CHER4A:	MOV	A, LEDSTORE4
		MOV	R0, NUMBER0
		LCALL	NUMCLR
		CJNE	R0, #001, CHER40
		CPL	ACC.7
		AJMP	CHER4C
	CHER40:	CJNE	R0, #002, CHER41
		CPL	ACC.6
		AJMP	CHER4C
	CHER41:	CJNE	R0, #003, CHER42
		CPL	ACC.5
		AJMP	CHER4C
	CHER42:	CJNE	R0, #004, CHER43
		CPL	ACC.4
		AJMP	CHER4C
	CHER43:	CJNE	R0, #005, CHER44
		CPL	ACC.3
		AJMP	CHER4C
	CHER44:	CJNE	R0, #006, CHER45
		CPL	ACC.2
		AJMP	CHER4C
	CHER45:	CJNE	R0, #007, CHER46
		CPL	ACC.1
		AJMP	CHER4C
	CHER46:	CJNE	R0, #008, CHER4X
		CPL	ACC.0
		AJMP	CHER4C
	CHER4C:	MOV	LEDSTORE4, A
	CHER4X:	LJMP	CHEEND
CHER4E:		//RING  DNC
		MOV	R5, #CNTRETCODE
		MOV	LEDDISPL0, #10000000B
		CJNE	A, #MODERINGOFF, CHERIE
		MOV	LEDDISPL1, #10000000B
		MOV	LEDDISPL2, #11111111B
		JNB	FLBRETBUTPR, CHERIA
		MOV	MODENOW, #MODEROW1SEL
		LJMP	MODCHE
	CHERIA:	JNB	FLBCHEBUTPR, CHERIF
		MOV	R1, #RINGDEUID
		MOV	R2, #000H
		MOV	R3, #RINGMOTION
		MOV	R4, #00000001B
		MOV	R5, #000H
		MOV	R6, #RINGSNONCH
		MOV	A, NUMBER1
		MOV	B, #010
		MUL	AB
		ADD	A, NUMBER0
		MOV	R7, A
		LCALL	DSSWRI
		LJMP	CHESED
	CHERIF:	LJMP	CHEEND
CHERIE:		//DOOR  DNC
		MOV	LEDDISPL2, CONDISTORE
		CJNE	A, #MODEDOORSET, CHEDRE
		MOV	LEDDISPL1, #00100000B
		JNB	FLBRETBUTPR, CHEDRA
		MOV	MODENOW, #MODEROW1SEL
		CLR	TR0
		LJMP	MODCHE
	CHEDRA:	MOV	R0, NUMBER0
		LCALL	NUMCLR
		CJNE	R0, #000, CHEDR0
		MOV	R7, #00000001B
		AJMP	CHEDRH
	CHEDR0:	CJNE	R0, #001, CHEDR1
		MOV	R7, #00000010B
		AJMP	CHEDRH
	CHEDR1:	CJNE	R0, #009, CHEDR2
		MOV	R7, #00000100B
	CHEDRH:	MOV	R5, #000H
		MOV	R6, #DOORMOTION
		AJMP	CHEDRC
	CHEDR2:	JNB	FLBSENDRET, CHEDRN
	CHEDRC:	MOV	R1, #DOORDEUID
		MOV	R2, #000H
		MOV	R3, #FLSSERIALMO
		MOV	R4, #001H
		LCALL	DSSWRI
		LJMP	CHESED
	CHEDRN:	LJMP	CHEEND
		//WINDOW  DNC
	CHEDRE:	CJNE	A, #MODEWINDSET, CHEWDE
		MOV	LEDDISPL1, #00010000B
		JNB	FLBRETBUTPR, CHEWDA
		MOV	MODENOW, #MODEROW1SEL
		CLR	TR0
		LJMP	MODCHE
	CHEWDA:	MOV	R0, NUMBER0
		LCALL	NUMCLR
		CJNE	R0, #000, CHEWD0
		MOV	R7, #00001000B	//STOP
		AJMP	CHEWDH
	CHEWD0:	CJNE	R0, #001, CHEWD1
		MOV	R7, #00000001B	//CLOSE
		AJMP	CHEWDH
	CHEWD1:	CJNE	R0, #002, CHEWD2
		MOV	R7, #00000010B	//MIDDLE
		AJMP	CHEWDH
	CHEWD2:	CJNE	R0, #003, CHEWD3
		MOV	R7, #00000100B	//OPEN
	CHEWDH:	MOV	R5, #000H
		MOV	R6, #WINDOWMOTION
		AJMP	CHEWDC
	CHEWD3:	JNB	FLBSENDRET, CHEWDN
	CHEWDC:	MOV	R1, #WINDOWDEUID
		MOV	R2, #000H
		MOV	R3, #FLSSERIALMO
		MOV	R4, #001H
		LCALL	DSSWRI
		LJMP	CHESED
	CHEWDN:	LJMP	CHEEND
CHEWDE:		//TIME SET  DNC
		MOV	LEDDISPL1, #00000010B
		CJNE	A, #MODETIMESET, CHETSE
		MOV	LEDDISPL2, #00000000B
		JNB	FLBRETBUTPR, CHETSA
		MOV	MODENOW, #MODEROW1SEL
		LJMP	MODCHE
	CHETSA:	MOV	R0, NUMBER0
		LCALL	NUMCLR
		CJNE	R0, #000, CHETS0
		AJMP	CHTSSD
	CHETS0:	CJNE	R0, #001, CHETS1
		MOV	MODENOW, #MODEMONDATSET
		AJMP	CHTSSD
	CHETS1:	CJNE	R0, #002, CHETSX
		MOV	MODENOW, #MODEHORMINSET
		AJMP	CHTSSD
	CHETSX:	LJMP	CHEEND
		//MONTH DATE SET  NC
	CHETSE:	CJNE	A, #MODEMONDATSET, CHTSO0
		MOV	LEDDISPL2, #11110000B
		MOV	R3, #CLOCKMONTH
		MOV	R6, #CLOCKDATE
		AJMP	CHTSOA
		;HOUR MINUTE SET  NC
	CHTSO0:	CJNE	A, #MODEHORMINSET, CHTSOE
		MOV	LEDDISPL2, #00001111B
		MOV	R3, #CLOCKHOUR
		MOV	R6, #CLOCKMINUTE
	CHTSOA:	JNB	FLBRETBUTPR, CHTASG
		MOV	MODENOW, #MODETIMESET
	CHTSSD:	MOV	R1, #CLOCKDEUID
		MOV	R2, #000H
		MOV	R3, #CLOCKSMODE
		MOV	R4, #001H
		LCALL	DSSWRI
		LJMP	CHESED
	CHTASG:	LJMP	CHTASC
CHTSOE:		//ALARM SELECT  DNC
		MOV	LEDDISPL1, #00000001B
		CJNE	A, #MODEALARMST, CHALSE
		MOV	LEDDISPL2, #00000000B
		JNB	FLBRETBUTPR, CHALSA
		MOV	MODENOW, #MODEROW1SEL
		LJMP	MODCHE
	CHALSA:	MOV	R0, NUMBER0
		LCALL	NUMCLR
		MOV	R1, #CLOCKDEUID
		MOV	R2, #003H
		MOV	R3, #CLOCKSMODE
		CJNE	R0, #001, CHALS0
		MOV	MODENOW, #MODEALARM1SET
		MOV	R4, #00010000B
		AJMP	CHALSS
	CHALS0:	CJNE	R0, #002, CHALS1
		MOV	MODENOW, #MODEALARM2SET
		MOV	R4, #00100000B
		AJMP	CHALSS
	CHALS1:	CJNE	R0, #003, CHALS2
		MOV	MODENOW, #MODEALARM3SET
		MOV	R4, #01000000B
		AJMP	CHALSS
	CHALS2:	CJNE	R0, #004, CHALSX
		MOV	MODENOW, #MODEALARM4SET
		MOV	R4, #10000000B
	CHALSS:	LCALL	DSSWRI
		LJMP	CHESED
	CHALSX:	LJMP	CHEEND
		;ALARM  NC
	CHALSE:	CJNE	A, #MODEALARM1SET, CHAL1E
		MOV	LEDDISPL2, #11000000B
		MOV	R3, #CLOCKALM01H
		MOV	R6, #CLOCKALM01M
		AJMP	CHALOA
	CHAL1E:	CJNE	A, #MODEALARM2SET, CHAL2E
		MOV	LEDDISPL2, #00110000B
		MOV	R3, #CLOCKALM02H
		MOV	R6, #CLOCKALM02M
		AJMP	CHALOA
	CHAL2E:	CJNE	A, #MODEALARM3SET, CHAL3E
		MOV	LEDDISPL2, #00001100B
		MOV	R3, #CLOCKALM03H
		MOV	R6, #CLOCKALM03M
		AJMP	CHALOA
	CHAL3E:	CJNE	A, #MODEALARM4SET, CHAL4E
		MOV	LEDDISPL2, #00000011B
		MOV	R3, #CLOCKALM04H
		MOV	R6, #CLOCKALM04M
	CHALOA:	JNB	FLBRETBUTPR, CHTASC
		MOV	MODENOW, #MODEALARMST
		MOV	R1, #CLOCKDEUID
		MOV	R2, #000H
		MOV	R3, #CLOCKSMODE
		MOV	R4, #000H
		LCALL	DSSWRI
		LJMP	CHESED
	CHTASC:	JNB	FLBCHEBUTPR, CHTASN
		MOV	R1, #CLOCKDEUID
		MOV	R2, #000H
		MOV	A, NUMBER3
		MOV	B, #010
		MUL	AB
		ADD	A, NUMBER2
		MOV	R4, A
		MOV	R5, #000H
		MOV	A, NUMBER1
		MOV	B, #010
		MUL	AB
		ADD	A, NUMBER0
		MOV	R7, A
		LCALL	DSSWRI
		LJMP	CHESED
	CHTASN:	LJMP	CHEEND
CHAL4E:		MOV	MODENOW, #MODEROWSEL
		CLR	TR0
	MODCHE:	MOV	CONDISTORE, #000H
	CHESED:	CLR	FLBSENDRET
		LCALL	NUMCLR
CHEEND:		CLR	FLBCHEBUTPR
		CLR	FLBRETBUTPR
		//LED DISPLAY
		MOV	R0, #LEDDISPL0
		MOV	R1, #11111110B
	DISPLO:	MOV	A, @R0
		CPL	A
		MOV	LEDDISSEL, R1
		MOV	LEDDISPLAY, A
		LCALL	DL102C
		MOV	A, R1
		RL	A
		MOV	R1, A
		INC	R0
		CJNE	A, #11111110B, DISPLO
	MALOEN:	LJMP	MALOOP
EAET0:		CLR	TF0
		MOV	TH0, #03CH
		MOV	TL0, #0B0H
		SETB	FLBSENDRET
		RETI
DSPSTA:		PUSH	ACC
		PUSH	PSW
		PUSH	000H
	//CHECK TI/RI
		JBC	RI, DSPRST
		CLR	TI
		LJMP	DSPSST
	//RECEIVE PROCESS
	DSPRST:	MOV	R0, STATE
		MOV	A, SBUF
		//RECEIVE DEPUTY CHECK
		CJNE	R0, #000H, DSPRMO
		CJNE	A, #DEVICEID, DSPRCN
		MOV	STATE, #001H
		CLR	SM2
	DSPRCN:	LJMP	DSPEND
		//RECEIVE MOTION
	DSPRMO:	CJNE	R0, #001H, DSPRPO
		;IF CAN SEND
		CJNE	A, #CANRETCODE, DSPRM0
		;IF WRITTING
		JNB	FLBWRITING, DSPSIT
		LJMP	DSPIWR
	DSPSIT:	LJMP	DSPSID
		;IF CANT SEND
	DSPRM0:	CJNE	A, #CNTRETCODE, DSPRM1
		MOV	STATE, #000H
		SETB	SM2
		LJMP	DSPEND
		;MOTION STORE
	DSPRM1:	MOV	STATE, #002H
		MOV	MOTION, A
		LJMP	DSPEND
		//RECEIVE POSITION
	DSPRPO:	CJNE	R0, #002H, DSPRVL
		MOV	STATE, #003H
		MOV	POSITION, A
		LJMP	DSPEND
		//RECEIVE VALUE
	DSPRVL:	CJNE	R0, #003H, DSPRER
		MOV	STATE, #001H
		AJMP	DSPRVN
		//RECEIVE ERROR
	DSPRER:	MOV	STATE, #00FH
		LJMP	DSPEND
		//VALUE WRITE
	DSPRVN:	PUSH	001H
		MOV	R0, MOTION
		MOV	R1, POSITION
		;SFRPORT0 WRITE
	DSPRP0:	CJNE	R1, #SFRPORT0, DSPRP1
		CJNE	R0, #REPLACECODE, DSPR00	;REPLACE VALUE
		MOV	SFRPORT0, A
		LJMP	DSPRVE
	DSPR00:	CJNE	R0, #CLRCODE, DSPR01	;AND VALUE (CLR
		ANL	A, SFRPORT0
		MOV	SFRPORT0, A
		LJMP	DSPRVE
	DSPR01:	CJNE	R0, #SETBCODE, DSPR02	;OR VALUE (SETB
		ORL	A, SFRPORT0
		MOV	SFRPORT0, A
		LJMP	DSPRVE
	DSPR02:	CJNE	R0, #CPLCODE, DSPR0E	;XOR VALUE (CPL
		XRL	A, SFRPORT0
		MOV	SFRPORT0, A
	DSPR0E:	LJMP	DSPRVE
		;SFRPORT1 WRITE
	DSPRP1:	CJNE	R1, #SFRPORT2, DSPRP2
		CJNE	R0, #REPLACECODE, DSPR10	;REPLACE VALUE
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR10:	CJNE	R0, #CLRCODE, DSPR11	;AND VALUE (CLR
		ANL	A, SFRPORT2
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR11:	CJNE	R0, #SETBCODE, DSPR12	;OR VALUE (SETB
		ORL	A, SFRPORT2
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR12:	CJNE	R0, #CPLCODE, DSPR1E	;XOR VALUE (CPL
		XRL	A, SFRPORT2
		MOV	SFRPORT2, A
	DSPR1E:	LJMP	DSPRVE
		;SFRPORT2 WRITE
	DSPRP2:	CJNE	R1, #SFRPORT2, DSPREX
		CJNE	R0, #REPLACECODE, DSPR20	;REPLACE VALUE
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR20:	CJNE	R0, #CLRCODE, DSPR21	;AND VALUE (CLR
		ANL	A, SFRPORT2
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR21:	CJNE	R0, #SETBCODE, DSPR22	;OR VALUE (SETB
		ORL	A, SFRPORT2
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR22:	CJNE	R0, #CPLCODE, DSPR2E	;XOR VALUE (CPL
		XRL	A, SFRPORT2
		MOV	SFRPORT2, A
	DSPR2E:	LJMP	DSPRVE
		;OTHER WRITE
	DSPREX:	CJNE	R0, #REPLACECODE, DSPRV9
		MOV	@R1, A
		AJMP	DSPRVE
	DSPRV9:	CJNE	R0, #CLRCODE, DSPRVA
		ANL	A, @R1	;CLR 1011
		MOV	@R1, A
		AJMP	DSPRVE
	DSPRVA:	CJNE	R0, #SETBCODE, DSPRVB
		ORL	A, @R1	;SETB 0100
		MOV	@R1, A
		AJMP	DSPRVE
	DSPRVB:	CJNE	R0, #CPLCODE, DSPRVE
		XRL	A, @R1	;CPL 0100
		MOV	@R1, A
		AJMP	DSPRVE
	DSPRVE:	MOV	MOTION, #0FFH
		MOV	POSITION, #0FFH
		POP	001H
		LJMP	DSPEND
	//SEND PROCESS START
		//RUN EMPTY
	DSPSST:	JNB	FLBRUNEMPTY, DSPSMO
		CLR	FLBRUNEMPTY
		AJMP	DSPEND
		//SEND ID
	DSPSID:	MOV	STATE, #011H
		MOV	POSITION, #STORESSTART+1
		LCALL	DL400C
		MOV	SBUF, STORESSTART
		LCALL	DL400C
		LJMP	DSPEND
		//IF WRITING
	DSPIWR:	MOV	STATE, #01AH
		LCALL	DL400C
		MOV	SBUF, #000
		LCALL	DL400C
		LJMP	DSPEND
		//SEND MOTION
	DSPSMO:	MOV	R0, STATE
		CJNE	R0, #011H, DSPSPO
		MOV	STATE, #012H
		;IF REACH END
		MOV	R0, POSITION
		CJNE	R0, #STORESEND, DSPSM0
		AJMP	DSPSFI
		;IF SEND FINISH
	DSPSM0:	MOV	A, @R0
		CJNE	A, #CANRETCODE, DSPSM1
		AJMP	DSPSFI
	DSPSM1:	CJNE	A, #CNTRETCODE, DSPSNM
		AJMP	DSPSFI
		//SEND POSITION AND VALUE
	DSPSPO:	CJNE	R0, #012H, DSPSVA
		MOV	STATE, #013H
		AJMP	DSPSNM
	DSPSVA:	CJNE	R0, #013H, DSPSWR
		MOV	STATE, #011H
		AJMP	DSPSNM
		//IF WRITING SEND CNTRETCODE
	DSPSWR:	CJNE	R0, #01AH, DSPSER
		AJMP	DSPSF0
		//SEND ERROR
	DSPSER:	MOV	STATE, #01FH
		AJMP	DSPEND
		//SEND NORMAL
	DSPSNM:	MOV	R0, POSITION
		INC	POSITION
		MOV	SBUF, @R0
		LCALL	DL400C
		AJMP	DSPEND
		//SEND FINISH
	DSPSFI:	MOV	R0, #STORESSTART
		LCALL	DSSCLR
		CLR	FLBSTORESTR
	DSPSF0:	MOV	STATE, #000H
		MOV	POSITION, #0FFH
		SETB	FLBRUNEMPTY
		SETB	SM2
		MOV	SBUF, #CNTRETCODE
	DSPEND:	POP	000H
		POP	PSW
		POP	ACC
		RETI
DSRSET:		MOV	SCON, #10110000B
		SETB	ES
		MOV	STATE, #000H
		MOV	MOTION, #0FFH
		MOV	POSITION, #0FFH
		MOV	FLSSERIALMO, #000H
		MOV	FLSSERIAL, #000H
		MOV	R0, #STORESSTART
		LCALL	DSSCLR
		MOV	R0, #STORE0START
		LCALL	DSSCLR
		MOV	R0, #STORE1START
		LCALL	DSSCLR
		MOV	R0, #STORE2START
		LCALL	DSSCLR
		MOV	R0, #STORE3START
		LCALL	DSSCLR
		MOV	SPRSERIAL, #0FFH
DSSCLR:		MOV	A, #STORESEND-STORESSTART+1
	STOCLL:	MOV	@R0, #CNTRETCODE
		INC	R0
		DJNZ	ACC, STOCLL
		RET
DSSMOV:		;SERIAL STORE MOVE 0>S
		JB	FLBSTORESTR, DSSSEN
		JNB	FLBSTORE0TR, DSSSEN
		MOV	R0, #STORESSTART
		MOV	R1, #STORE0START
		MOV	R2, #STORESEND+1-STORESSTART
		SETB	FLBWRITING
		SETB	FLBSTORESTR
	DSSSLO:	MOV	A, @R1
		MOV	@R0, A
		INC	R0
		INC	R1
		DJNZ	R2, DSSSLO
		MOV	R0, #STORE0START
		LCALL	DSSCLR
		CLR	FLBSTORE0TR
		CLR	FLBWRITING
	DSSSEN:	JNB	FLBSTORESTR, DSSTRI
		CLR	SPBSERIALTR
		AJMP	DSSTRE
	DSSTRI:	SETB	SPBSERIALTR
		//SERIAL STORE MOVE 1>0
	DSSTRE:	JB	FLBSTORE0TR, DSS0EN
		JNB	FLBSTORE1TR, DSS0EN
		SETB	FLBSTORE0TR
		CLR	FLBSTORE1TR
		MOV	R0, #STORE0START
		MOV	R1, #STORE1START
		MOV	R2, #STORESEND+1-STORESSTART
	DSS0LO:	MOV	A, @R1
		MOV	@R0, A
		INC	R0
		INC	R1
		DJNZ	R2, DSS0LO
		MOV	R0, #STORE1START
		LCALL	DSSCLR
	DSS0EN:	//SERIAL STORE MOVE 2>1
		JB	FLBSTORE1TR, DSS1EN
		JNB	FLBSTORE2TR, DSS1EN
		SETB	FLBSTORE1TR
		CLR	FLBSTORE2TR
		MOV	R0, #STORE1START
		MOV	R1, #STORE2START
		MOV	R2, #STORESEND+1-STORESSTART
	DSS1LO:	MOV	A, @R1
		MOV	@R0, A
		INC	R0
		INC	R1
		DJNZ	R2, DSS1LO
		MOV	R0, #STORE2START
		LCALL	DSSCLR
	DSS1EN:	//SERIAL STORE MOVE 3>2
		JB	FLBSTORE2TR, DSS2EN
		JNB	FLBSTORE3TR, DSS2EN
		SETB	FLBSTORE2TR
		CLR	FLBSTORE3TR
		MOV	R0, #STORE2START
		MOV	R1, #STORE3START
		MOV	R2, #STORESEND+1-STORESSTART
	DSS2LO:	MOV	A, @R1
		MOV	@R0, A
		INC	R0
		INC	R1
		DJNZ	R2, DSS2LO
		MOV	R0, #STORE3START
		LCALL	DSSCLR
	DSS2EN:	RET
DSSWRI:		JB	FLBSTORE0TR, STPOS0
		MOV	R0, #STORE0START
		SETB	FLBSTORE0TR
		AJMP	DSSWSE
	STPOS0:	JB	FLBSTORE1TR, STPOS1
		MOV	R0, #STORE1START
		SETB	FLBSTORE1TR
		AJMP	DSSWSE
	STPOS1:	JB	FLBSTORE2TR, STPOS2
		MOV	R0, #STORE2START
		SETB	FLBSTORE2TR
		AJMP	DSSWSE
	STPOS2:	JB	FLBSTORE3TR, STPOSE
		MOV	R0, #STORE3START
		SETB	FLBSTORE3TR
		AJMP	DSSWSE
	STPOSE:	MOV	R0, #0F0H
		RET
	DSSWSE:	MOV	@R0, 001H
		INC	R0
		MOV	@R0, 002H
		INC	R0
		MOV	@R0, 003H
		INC	R0
		MOV	@R0, 004H
		INC	R0
		MOV	@R0, 005H
		INC	R0
		MOV	@R0, 006H
		INC	R0
		MOV	@R0, 007H
		INC	R0
		MOV	@R0, #CNTRETCODE
		RET
NUMCLR:		MOV	NUMBER3, #0FFH
		MOV	NUMBER2, #0FFH
		MOV	NUMBER1, #0FFH
		MOV	NUMBER0, #0FFH
		RET
MOVNUM:		MOV	NUMBER3, NUMBER2
		MOV	NUMBER2, NUMBER1
		MOV	NUMBER1, NUMBER0
		RET
DL400C:		PUSH	007H
		MOV	R7, #020
		DJNZ	R7, $
		POP	007H
		RET
DL102C:		PUSH	006H
		PUSH	007H
		MOV	R6, #002
	DL102A:	MOV	R7, #250
		DJNZ	R7, $
		DJNZ	R6, DL102A
		POP	007H
		POP	006H
		RET
TABLE:	
	END