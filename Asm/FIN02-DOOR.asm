GLODEF:	//GLOBAL ADRESS
	CONTROLDEUID	EQU	001H
	CONTROLCDSTR	EQU	037H
	DOORDEUID	EQU	002H
	DOORMOTION	EQU	020H
	CLOCKDEUID	EQU	003H
	CLOCKSMODE	EQU	020H
	CLOCKMONTH	EQU	030H
	CLOCKDATE	EQU	031H
	CLOCKHOUR	EQU	032H
	CLOCKMINUTE	EQU	033H
	CLOCKALM01M	EQU	040H
	CLOCKALM01H	EQU	041H
	CLOCKALM02M	EQU	042H
	CLOCKALM02H	EQU	043H
	CLOCKALM03M	EQU	044H
	CLOCKALM03H	EQU	045H
	CLOCKALM04M	EQU	046H
	CLOCKALM04H	EQU	047H
	WINDOWDEUID	EQU	004H
	WINDOWMOTION	EQU	020H
	RINGDEUID	EQU	005H
	RINGMOTION	EQU	020H
	RINGSNONCH	EQU	038H
	//SERIAL SETUP
	;DEVICEID	EQU	0XXH
	CANRETCODE	EQU	0FEH
	CNTRETCODE	EQU	0FFH
	REPLACECODE	EQU	000H
	CLRCODE		EQU	001H
	SETBCODE	EQU	002H
	CPLCODE		EQU	003H
	SPRSERIAL	EQU	P3
	SPBSERIALTR	EQU	SPRSERIAL.2
	STATE		EQU	070H
	MOTION		EQU	071H
	POSITION	EQU	072H
	STORESSTART	EQU	078H
	STORESEND	EQU	07FH
	STORE0START	EQU	060H
	STORE1START	EQU	068H
	STORE2START	EQU	050H
	STORE3START	EQU	058H
	FLSSERIALMO	EQU	02EH
	FLBSERIALRET	EQU	FLSSERIALMO.0
	FLSSERIAL	EQU	02FH
	FLBRUNEMPTY	EQU	FLSSERIAL.0
	FLBWRITING	EQU	FLSSERIAL.1
	FLBSTORESTR	EQU	FLSSERIAL.2
	FLBSTORE0TR	EQU	FLSSERIAL.4
	FLBSTORE1TR	EQU	FLSSERIAL.5
	FLBSTORE2TR	EQU	FLSSERIAL.6
	FLBSTORE3TR	EQU	FLSSERIAL.7
	SFRPORT0	EQU	080H
	SFRPORT1	EQU	090H
	SFRPORT2	EQU	0A0H
	//DEFINE TIMER 2 (PWM)
	T2CON		EQU	0C8H
	TF2		EQU	T2CON.7
	TR2		EQU	T2CON.2
	CPRL2		EQU	T2CON.0
	RCAP2L		EQU	0CAH
	RCAP2H		EQU	0CBH
	TL2		EQU	0CCH
	TH2		EQU	0CDH
	ET2		EQU	IE.5
DEUDEF:	//DEFINE CONST
	DEVICEID	EQU	002H
	PASSWORD0	EQU	006
	PASSWORD1	EQU	005
	PASSWORD2	EQU	004
	PASSWORD3	EQU	003
	PASSWORD4	EQU	002
	PASSWORD5	EQU	001
	PASSWORD6	EQU	0FFH
	PASSWORD7	EQU	0FFH
	PWMSETH		EQU	0FEH	;TIMER 0
	PWMSETL		EQU	006H
	//DEFINE ADRESS
	IPSNORMAL	EQU	P0
	IPBDOOROPENTR	EQU	IPSNORMAL.0
	IPBDOOROPENBUT	EQU	IPSNORMAL.1
	IPSBUTTONS	EQU	P1
	OPSNORMAL	EQU	P2
	OPBDRLOCK	EQU	OPSNORMAL.0
	OPBDRLIGHTIN	EQU	OPSNORMAL.1
	OPBSPEAKEROUT	EQU	OPSNORMAL.2
	OPBLED0		EQU	OPSNORMAL.4
	OPBLED1		EQU	OPSNORMAL.5	;R
	OPBLED2		EQU	OPSNORMAL.6	;G
	OPBLED3		EQU	OPSNORMAL.7
	DOORMOTIOND	EQU	020H	;GLOBAL
	FLBLOCKSW	EQU	DOORMOTIOND.0
	FLBLIGHTINSW	EQU	DOORMOTIOND.1
	FLBRINGFOFFSW	EQU	DOORMOTIOND.2
	FLSOTHER	EQU	02AH
	FLBLIGINKEEP	EQU	FLSOTHER.0
	FLBDROPTIMER	EQU	FLSOTHER.1
	FLBRINGFOFF	EQU	FLSOTHER.2
	FLBBUTPRFSS	EQU	FLSOTHER.7
	NUMBER0		EQU	030H
	NUMBER1		EQU	031H
	NUMBER2		EQU	032H
	NUMBER3		EQU	033H
	NUMBER4		EQU	034H
	NUMBER5		EQU	035H
	NUMBER6		EQU	036H
	NUMBER7		EQU	037H
	TIMESTORE	EQU	040H
	ORG	0000H
		LJMP	START
	ORG	000BH
		LJMP	EAET0
	ORG	0023H
		LJMP	DSPSTA
	ORG	002BH
		LJMP	EAET2
	ORG	0040H
START:		LCALL	DSRSET
	//TIMER2 SETUP
		MOV	T2CON, #000H
		MOV	RCAP2H, #PWMSETH
		MOV	RCAP2L, #PWMSETL
		MOV	TH2, RCAP2H
		MOV	TL2, RCAP2L
	//NORMAL SETUP
		MOV	TMOD, #00010001B
		MOV	IPSNORMAL, #0FFH
		MOV	IPSBUTTONS, #0FFH
		MOV	OPSNORMAL, #0FFH
		MOV	FLSOTHER, #000H
		LCALL	NUMCLR
		SETB	ET0
		SETB	ET2
		SETB	EA
		LJMP	DOORCL
MALOOP:		LCALL	DSSMOV
		JNB	FLBSERIALRET, DSMPEN
		CLR	FLBSERIALRET
		MOV	R1, #CONTROLDEUID
		MOV	R2, #000H
		MOV	R3, #CONTROLCDSTR
		MOV	A, #000H
		JB	OPBDRLOCK, SERRT0
		SETB	ACC.0
	SERRT0:	JNB	FLBRINGFOFF, SERRT1
		SETB	ACC.4
	SERRT1:	JB	OPBDRLIGHTIN, SERRTE
		SETB	ACC.7
	SERRTE:	MOV	R4, A
		MOV	R5, #CNTRETCODE
		LCALL	DSSWRI
DSMPEN:	//INPUT
		MOV	IPSBUTTONS, #11110111B
		//IF PRESS 1A
		JNB	IPSBUTTONS.7, BUT1AT
		AJMP	BUT1AE
	BUT1AT:	JNB	FLBBUTPRFSS, BUT1AS
		LJMP	BUTEND
		;PRESS 1A COMMANDS
	BUT1AS:	LCALL	MOVNUM
		MOV	NUMBER0, #007
		LJMP	BUTPRE
		//IF PRESS 1B
	BUT1AE:	JNB	IPSBUTTONS.6, BUT1BT
		AJMP	BUT1BE
	BUT1BT:	JNB	FLBBUTPRFSS, BUT1BS
		LJMP	BUTEND
		;PRESS 1B COMMANDS
	BUT1BS:	LCALL	MOVNUM
		MOV	NUMBER0, #008
		LJMP	BUTPRE
		//IF PRESS 1C
	BUT1BE:	JNB	IPSBUTTONS.5, BUT1CT
		AJMP	BUT1CE
	BUT1CT:	JNB	FLBBUTPRFSS, BUT1CS
		LJMP	BUTEND
		;PRESS 1C COMMANDS
	BUT1CS:	LCALL	MOVNUM
		MOV	NUMBER0, #009
		LJMP	BUTPRE
		//IF PRESS 1D
	BUT1CE:	JNB	IPSBUTTONS.4, BUT1DT
		AJMP	BUT1DE
	BUT1DT:	JNB	FLBBUTPRFSS, BUT1DS
		LJMP	BUTEND
		;PRESS 1D COMMANDS
	BUT1DS:	CLR	OPBLED3
		LJMP	BUTPRR
		//CHANGE
	BUT1DE:	MOV	IPSBUTTONS, #11111011B
		//IF PRESS 2A
		JNB	IPSBUTTONS.7, BUT2AT
		AJMP	BUT2AE
	BUT2AT:	JNB	FLBBUTPRFSS, BUT2AS
		LJMP	BUTEND
		;PRESS 2A COMMANDS
	BUT2AS:	LCALL	MOVNUM
		MOV	NUMBER0, #004
		LJMP	BUTPRE
		//IF PRESS 2B
	BUT2AE:	JNB	IPSBUTTONS.6, BUT2BT
		AJMP	BUT2BE
	BUT2BT:	JNB	FLBBUTPRFSS, BUT2BS
		LJMP	BUTEND
		;PRESS 2B COMMANDS
	BUT2BS:	LCALL	MOVNUM
		MOV	NUMBER0, #005
		LJMP	BUTPRE
		//IF PRESS 2C
	BUT2BE:	JNB	IPSBUTTONS.5, BUT2CT
		AJMP	BUT2CE
	BUT2CT:	JNB	FLBBUTPRFSS, BUT2CS
		LJMP	BUTEND
		;PRESS 2C COMMANDS
	BUT2CS:	LCALL	MOVNUM
		MOV	NUMBER0, #006
		LJMP	BUTPRE
		//IF PRESS 2D
	BUT2CE:	JNB	IPSBUTTONS.4, BUT2DT
		AJMP	BUT2DE
	BUT2DT:	JNB	FLBBUTPRFSS, BUT2DS
		LJMP	BUTEND
		;PRESS 2D COMMANDS
	BUT2DS:	LJMP	BUTPRR
		//CHANGE
	BUT2DE:	MOV	IPSBUTTONS, #11111101B
		//IF PRESS 3A
		JNB	IPSBUTTONS.7, BUT3AT
		AJMP	BUT3AE
	BUT3AT:	JNB	FLBBUTPRFSS, BUT3AS
		LJMP	BUTEND
		;PRESS 3A COMMANDS
	BUT3AS:	LCALL	MOVNUM
		MOV	NUMBER0, #001
		LJMP	BUTPRE
		//IF PRESS 3B
	BUT3AE:	JNB	IPSBUTTONS.6, BUT3BT
		AJMP	BUT3BE
	BUT3BT:	JNB	FLBBUTPRFSS, BUT3BS
		LJMP	BUTEND
		;PRESS 3B COMMANDS
	BUT3BS:	LCALL	MOVNUM
		MOV	NUMBER0, #002
		LJMP	BUTPRE
		//IF PRESS 3C
	BUT3BE:	JNB	IPSBUTTONS.5, BUT3CT
		AJMP	BUT3CE
	BUT3CT:	JNB	FLBBUTPRFSS, BUT3CS
		LJMP	BUTEND
		;PRESS 3C COMMANDS
	BUT3CS:	LCALL	MOVNUM
		MOV	NUMBER0, #003
		LJMP	BUTPRE
		//IF PRESS 3D
	BUT3CE:	JNB	IPSBUTTONS.4, BUT3DT
		AJMP	BUT3DE
	BUT3DT:	JNB	FLBBUTPRFSS, BUT3DS
		LJMP	BUTEND
		;PRESS 3D COMMANDS
	BUT3DS:	LJMP	BUTPRR
		//CHANGE
	BUT3DE:	MOV	IPSBUTTONS, #11111110B
		//IF PRESS 4A
		JNB	IPSBUTTONS.7, BUT4AT
		AJMP	BUT4AE
	BUT4AT:	JNB	FLBBUTPRFSS, BUT4AS
		LJMP	BUTEND
		;PRESS 4A COMMANDS
	BUT4AS:	LCALL	NUMCLR
		LJMP	BUTPRE
		//IF PRESS 4B
	BUT4AE:	JNB	IPSBUTTONS.6, BUT4BT
		AJMP	BUT4BE
	BUT4BT:	JNB	FLBBUTPRFSS, BUT4BS
		LJMP	BUTEND
		;PRESS 4B COMMANDS
	BUT4BS:	LCALL	MOVNUM
		MOV	NUMBER0, #000
		LJMP	BUTPRE
		//IF PRESS 4C
	BUT4BE:	JNB	IPSBUTTONS.5, BUT4CT
		AJMP	BUT4CE
	BUT4CT:	JNB	FLBBUTPRFSS, BUT4CS
		LJMP	BUTEND
		;PRESS 4C COMMANDS
	BUT4CS:	LJMP	BUTEND
		//IF PRESS 4D
	BUT4CE:	JNB	IPSBUTTONS.4, BUT4DT
		AJMP	BUT4DE
	BUT4DT:	JNB	FLBBUTPRFSS, BUT4DS
		LJMP	BUTEND
		;PRESS 4D COMMANDS
	BUT4DS:	JB	FLBRINGFOFF, BUTPRE
		MOV	R1, #RINGDEUID
		MOV	R2, #000H
		MOV	R3, #RINGMOTION
		MOV	R4, #00000001B
		MOV	R5, #000H
		MOV	R6, #RINGSNONCH
		MOV	R7, #002
		LCALL	DSSWRI
		/*MOV	R1, #CONTROLDEUID
		MOV	R2, #000H
		MOV	R3, #FLSSERIALMO
		MOV	R4, #00000101B
		MOV	R5, #CNTRETCODE
		LCALL	DSSWRI*/
		AJMP	BUTPRE
		//IF NONE PRESS
	BUT4DE:	CLR	FLBBUTPRFSS
		AJMP	BUTEND
		//IF ANY PRESS
	BUTPRE:	MOV	TIMESTORE, #094
		MOV	TH0, #03CH
		MOV	TL0, #0B0H
		SETB	TR0
		MOV	TH2, RCAP2H
		MOV	TL2, RCAP2L
		SETB	TR2
	BUTPRR:	SETB	FLBBUTPRFSS
BUTEND:	//CHECK
		JNB	FLBRINGFOFFSW, RICHEN
		CLR	FLBRINGFOFFSW
		JBC	FLBRINGFOFF, RICHEN
		SETB	FLBRINGFOFF
		//SWICH CHECK
	RICHEN:	JNB	FLBLOCKSW, SWCHE0
		CLR	FLBLOCKSW
		JB	OPBDRLOCK, DOOROP
		AJMP	DOORCL
	SWCHE0:	JNB	IPBDOOROPENBUT, DOOROP
		//PASSWORD CHECK
		MOV	A, NUMBER7
		CJNE	A, #PASSWORD7, PAWCHE
		MOV	A, NUMBER6
		CJNE	A, #PASSWORD6, PAWCHE
		MOV	A, NUMBER5
		CJNE	A, #PASSWORD5, PAWCHE
		MOV	A, NUMBER4
		CJNE	A, #PASSWORD4, PAWCHE
		MOV	A, NUMBER3
		CJNE	A, #PASSWORD3, PAWCHE
		MOV	A, NUMBER2
		CJNE	A, #PASSWORD2, PAWCHE
		MOV	A, NUMBER1
		CJNE	A, #PASSWORD1, PAWCHE
		MOV	A, NUMBER0
		CJNE	A, #PASSWORD0, PAWCHE
		LCALL	NUMCLR
		//DOOR OPEN
	DOOROP:	SETB	OPBLED1
		CLR	OPBLED2
		CLR	OPBDRLOCK
		CLR	FLBDROPTIMER
		MOV	TIMESTORE, #100
		MOV	TH0, #03CH
		MOV	TL0, #0B0H
		SETB	TR0
		MOV	TH2, RCAP2H
		MOV	TL2, RCAP2L
		SETB	TR2
		//TIME CHECK
	PAWCHE:	MOV	A, TIMESTORE
		;BUZZER OFF
		CJNE	A, #090, TICHE0
		CLR	TR2
		SETB	OPBSPEAKEROUT
		AJMP	TICHE1
		;DOOR AUTO LOCK
	TICHE0:	JNZ	TICHE1
		MOV	TIMESTORE, #0FFH
		AJMP	DOORCL
	TICHE1:	JNB	IPBDOOROPENTR, TICHEN
		JB	FLBDROPTIMER, TICHEN
		SETB	FLBDROPTIMER
		CLR	TR2
		SETB	OPBSPEAKEROUT
		MOV	TIMESTORE, #010H
		AJMP	TICHEN
		//DOOR CLOSE
	DOORCL:	CLR	OPBLED1
		SETB	OPBLED2
		CLR	TR0
		CLR	TR2
		LCALL	NUMCLR
		CLR	TR2
		SETB	OPBSPEAKEROUT
		SETB	OPBDRLOCK
		//DOOR INSIDE LIGHT
	TICHEN:	JNB	FLBLIGHTINSW, LIGIC0
		CLR	FLBLIGHTINSW
		JBC	FLBLIGINKEEP, LIGIC0
		SETB	FLBLIGINKEEP
	LIGIC0:	JNB	FLBLIGINKEEP, LIGIC1
		CLR	OPBDRLIGHTIN
		AJMP	MALOEN
	LIGIC1:	JNB	IPBDOOROPENTR, LIGIC2
		;IF DOOR IS OPEN
		CLR	OPBDRLIGHTIN
		AJMP	MALOEN
		;IF DOOR IS CLOSE
	LIGIC2:	SETB	OPBDRLIGHTIN
	MALOEN:	LJMP	MALOOP
EAET0:		CLR	TF0
		MOV	TH0, #03CH
		MOV	TL0, #0B0H
		DEC	TIMESTORE
		RETI
EAET2:		CLR	TF2
		JBC	OPBSPEAKEROUT, EAET2E
		SETB	OPBSPEAKEROUT
	EAET2E:	RETI
DSPSTA:		PUSH	ACC
		PUSH	PSW
		PUSH	000H
	//CHECK TI/RI
		JBC	RI, DSPRST
		CLR	TI
		LJMP	DSPSST
	//RECEIVE PROCESS
	DSPRST:	MOV	R0, STATE
		MOV	A, SBUF
		//RECEIVE DEPUTY CHECK
		CJNE	R0, #000H, DSPRMO
		CJNE	A, #DEVICEID, DSPRCN
		MOV	STATE, #001H
		CLR	SM2
	DSPRCN:	LJMP	DSPEND
		//RECEIVE MOTION
	DSPRMO:	CJNE	R0, #001H, DSPRPO
		;IF CAN SEND
		CJNE	A, #CANRETCODE, DSPRM0
		;IF WRITTING
		JNB	FLBWRITING, DSPSIT
		LJMP	DSPIWR
	DSPSIT:	LJMP	DSPSID
		;IF CANT SEND
	DSPRM0:	CJNE	A, #CNTRETCODE, DSPRM1
		MOV	STATE, #000H
		SETB	SM2
		LJMP	DSPEND
		;MOTION STORE
	DSPRM1:	MOV	STATE, #002H
		MOV	MOTION, A
		LJMP	DSPEND
		//RECEIVE POSITION
	DSPRPO:	CJNE	R0, #002H, DSPRVL
		MOV	STATE, #003H
		MOV	POSITION, A
		LJMP	DSPEND
		//RECEIVE VALUE
	DSPRVL:	CJNE	R0, #003H, DSPRER
		MOV	STATE, #001H
		AJMP	DSPRVN
		//RECEIVE ERROR
	DSPRER:	MOV	STATE, #00FH
		LJMP	DSPEND
		//VALUE WRITE
	DSPRVN:	PUSH	001H
		MOV	R0, MOTION
		MOV	R1, POSITION
		;SFRPORT0 WRITE
	DSPRP0:	CJNE	R1, #SFRPORT0, DSPRP1
		CJNE	R0, #REPLACECODE, DSPR00	;REPLACE VALUE
		MOV	SFRPORT0, A
		LJMP	DSPRVE
	DSPR00:	CJNE	R0, #CLRCODE, DSPR01	;AND VALUE (CLR
		ANL	A, SFRPORT0
		MOV	SFRPORT0, A
		LJMP	DSPRVE
	DSPR01:	CJNE	R0, #SETBCODE, DSPR02	;OR VALUE (SETB
		ORL	A, SFRPORT0
		MOV	SFRPORT0, A
		LJMP	DSPRVE
	DSPR02:	CJNE	R0, #CPLCODE, DSPR0E	;XOR VALUE (CPL
		XRL	A, SFRPORT0
		MOV	SFRPORT0, A
	DSPR0E:	LJMP	DSPRVE
		;SFRPORT1 WRITE
	DSPRP1:	CJNE	R1, #SFRPORT2, DSPRP2
		CJNE	R0, #REPLACECODE, DSPR10	;REPLACE VALUE
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR10:	CJNE	R0, #CLRCODE, DSPR11	;AND VALUE (CLR
		ANL	A, SFRPORT2
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR11:	CJNE	R0, #SETBCODE, DSPR12	;OR VALUE (SETB
		ORL	A, SFRPORT2
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR12:	CJNE	R0, #CPLCODE, DSPR1E	;XOR VALUE (CPL
		XRL	A, SFRPORT2
		MOV	SFRPORT2, A
	DSPR1E:	LJMP	DSPRVE
		;SFRPORT2 WRITE
	DSPRP2:	CJNE	R1, #SFRPORT2, DSPREX
		CJNE	R0, #REPLACECODE, DSPR20	;REPLACE VALUE
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR20:	CJNE	R0, #CLRCODE, DSPR21	;AND VALUE (CLR
		ANL	A, SFRPORT2
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR21:	CJNE	R0, #SETBCODE, DSPR22	;OR VALUE (SETB
		ORL	A, SFRPORT2
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR22:	CJNE	R0, #CPLCODE, DSPR2E	;XOR VALUE (CPL
		XRL	A, SFRPORT2
		MOV	SFRPORT2, A
	DSPR2E:	LJMP	DSPRVE
		;OTHER WRITE
	DSPREX:	CJNE	R0, #REPLACECODE, DSPRV9
		MOV	@R1, A
		AJMP	DSPRVE
	DSPRV9:	CJNE	R0, #CLRCODE, DSPRVA
		ANL	A, @R1	;CLR 1011
		MOV	@R1, A
		AJMP	DSPRVE
	DSPRVA:	CJNE	R0, #SETBCODE, DSPRVB
		ORL	A, @R1	;SETB 0100
		MOV	@R1, A
		AJMP	DSPRVE
	DSPRVB:	CJNE	R0, #CPLCODE, DSPRVE
		XRL	A, @R1	;CPL 0100
		MOV	@R1, A
		AJMP	DSPRVE
	DSPRVE:	MOV	MOTION, #0FFH
		MOV	POSITION, #0FFH
		POP	001H
		LJMP	DSPEND
	//SEND PROCESS START
		//RUN EMPTY
	DSPSST:	JNB	FLBRUNEMPTY, DSPSMO
		CLR	FLBRUNEMPTY
		AJMP	DSPEND
		//SEND ID
	DSPSID:	MOV	STATE, #011H
		MOV	POSITION, #STORESSTART+1
		LCALL	DL400C
		MOV	SBUF, STORESSTART
		LCALL	DL400C
		LJMP	DSPEND
		//IF WRITING
	DSPIWR:	MOV	STATE, #01AH
		LCALL	DL400C
		MOV	SBUF, #000
		LCALL	DL400C
		LJMP	DSPEND
		//SEND MOTION
	DSPSMO:	MOV	R0, STATE
		CJNE	R0, #011H, DSPSPO
		MOV	STATE, #012H
		;IF REACH END
		MOV	R0, POSITION
		CJNE	R0, #STORESEND, DSPSM0
		AJMP	DSPSFI
		;IF SEND FINISH
	DSPSM0:	MOV	A, @R0
		CJNE	A, #CANRETCODE, DSPSM1
		AJMP	DSPSFI
	DSPSM1:	CJNE	A, #CNTRETCODE, DSPSNM
		AJMP	DSPSFI
		//SEND POSITION AND VALUE
	DSPSPO:	CJNE	R0, #012H, DSPSVA
		MOV	STATE, #013H
		AJMP	DSPSNM
	DSPSVA:	CJNE	R0, #013H, DSPSWR
		MOV	STATE, #011H
		AJMP	DSPSNM
		//IF WRITING SEND CNTRETCODE
	DSPSWR:	CJNE	R0, #01AH, DSPSER
		AJMP	DSPSF0
		//SEND ERROR
	DSPSER:	MOV	STATE, #01FH
		AJMP	DSPEND
		//SEND NORMAL
	DSPSNM:	MOV	R0, POSITION
		INC	POSITION
		MOV	SBUF, @R0
		LCALL	DL400C
		AJMP	DSPEND
		//SEND FINISH
	DSPSFI:	MOV	R0, #STORESSTART
		LCALL	DSSCLR
		CLR	FLBSTORESTR
	DSPSF0:	MOV	STATE, #000H
		MOV	POSITION, #0FFH
		SETB	FLBRUNEMPTY
		SETB	SM2
		MOV	SBUF, #CNTRETCODE
	DSPEND:	POP	000H
		POP	PSW
		POP	ACC
		RETI
DSRSET:		MOV	SCON, #10110000B
		SETB	ES
		MOV	STATE, #000H
		MOV	MOTION, #0FFH
		MOV	POSITION, #0FFH
		MOV	FLSSERIALMO, #000H
		MOV	FLSSERIAL, #000H
		MOV	R0, #STORESSTART
		LCALL	DSSCLR
		MOV	R0, #STORE0START
		LCALL	DSSCLR
		MOV	R0, #STORE1START
		LCALL	DSSCLR
		MOV	R0, #STORE2START
		LCALL	DSSCLR
		MOV	R0, #STORE3START
		LCALL	DSSCLR
		MOV	SPRSERIAL, #0FFH
DSSCLR:		MOV	A, #STORESEND-STORESSTART+1
	STOCLL:	MOV	@R0, #CNTRETCODE
		INC	R0
		DJNZ	ACC, STOCLL
		RET
DSSMOV:		;SERIAL STORE MOVE 0>S
		JB	FLBSTORESTR, DSSSEN
		JNB	FLBSTORE0TR, DSSSEN
		MOV	R0, #STORESSTART
		MOV	R1, #STORE0START
		MOV	R2, #STORESEND+1-STORESSTART
		SETB	FLBWRITING
		SETB	FLBSTORESTR
	DSSSLO:	MOV	A, @R1
		MOV	@R0, A
		INC	R0
		INC	R1
		DJNZ	R2, DSSSLO
		MOV	R0, #STORE0START
		LCALL	DSSCLR
		CLR	FLBSTORE0TR
		CLR	FLBWRITING
	DSSSEN:	JNB	FLBSTORESTR, DSSTRI
		CLR	SPBSERIALTR
		AJMP	DSSTRE
	DSSTRI:	SETB	SPBSERIALTR
		//SERIAL STORE MOVE 1>0
	DSSTRE:	JB	FLBSTORE0TR, DSS0EN
		JNB	FLBSTORE1TR, DSS0EN
		SETB	FLBSTORE0TR
		CLR	FLBSTORE1TR
		MOV	R0, #STORE0START
		MOV	R1, #STORE1START
		MOV	R2, #STORESEND+1-STORESSTART
	DSS0LO:	MOV	A, @R1
		MOV	@R0, A
		INC	R0
		INC	R1
		DJNZ	R2, DSS0LO
		MOV	R0, #STORE1START
		LCALL	DSSCLR
	DSS0EN:	//SERIAL STORE MOVE 2>1
		JB	FLBSTORE1TR, DSS1EN
		JNB	FLBSTORE2TR, DSS1EN
		SETB	FLBSTORE1TR
		CLR	FLBSTORE2TR
		MOV	R0, #STORE1START
		MOV	R1, #STORE2START
		MOV	R2, #STORESEND+1-STORESSTART
	DSS1LO:	MOV	A, @R1
		MOV	@R0, A
		INC	R0
		INC	R1
		DJNZ	R2, DSS1LO
		MOV	R0, #STORE2START
		LCALL	DSSCLR
	DSS1EN:	//SERIAL STORE MOVE 3>2
		JB	FLBSTORE2TR, DSS2EN
		JNB	FLBSTORE3TR, DSS2EN
		SETB	FLBSTORE2TR
		CLR	FLBSTORE3TR
		MOV	R0, #STORE2START
		MOV	R1, #STORE3START
		MOV	R2, #STORESEND+1-STORESSTART
	DSS2LO:	MOV	A, @R1
		MOV	@R0, A
		INC	R0
		INC	R1
		DJNZ	R2, DSS2LO
		MOV	R0, #STORE3START
		LCALL	DSSCLR
	DSS2EN:	RET
DSSWRI:		JB	FLBSTORE0TR, STPOS0
		MOV	R0, #STORE0START
		SETB	FLBSTORE0TR
		AJMP	DSSWSE
	STPOS0:	JB	FLBSTORE1TR, STPOS1
		MOV	R0, #STORE1START
		SETB	FLBSTORE1TR
		AJMP	DSSWSE
	STPOS1:	JB	FLBSTORE2TR, STPOS2
		MOV	R0, #STORE2START
		SETB	FLBSTORE2TR
		AJMP	DSSWSE
	STPOS2:	JB	FLBSTORE3TR, STPOSE
		MOV	R0, #STORE3START
		SETB	FLBSTORE3TR
		AJMP	DSSWSE
	STPOSE:	MOV	R0, #0F0H
		RET
	DSSWSE:	MOV	@R0, 001H
		INC	R0
		MOV	@R0, 002H
		INC	R0
		MOV	@R0, 003H
		INC	R0
		MOV	@R0, 004H
		INC	R0
		MOV	@R0, 005H
		INC	R0
		MOV	@R0, 006H
		INC	R0
		MOV	@R0, 007H
		INC	R0
		MOV	@R0, #CNTRETCODE
		RET
DL400C:		PUSH	007H
		MOV	R7, #020
		DJNZ	R7, $
		POP	007H
		RET
NUMCLR:		MOV	NUMBER0, #0FFH
		MOV	NUMBER1, #0FFH
		MOV	NUMBER2, #0FFH
		MOV	NUMBER3, #0FFH
		MOV	NUMBER4, #0FFH
		MOV	NUMBER5, #0FFH
		MOV	NUMBER6, #0FFH
		MOV	NUMBER7, #0FFH
		RET
MOVNUM:		MOV	NUMBER7, NUMBER6
		MOV	NUMBER6, NUMBER5
		MOV	NUMBER5, NUMBER4
		MOV	NUMBER4, NUMBER3
		MOV	NUMBER3, NUMBER2
		MOV	NUMBER2, NUMBER1
		MOV	NUMBER1, NUMBER0
		RET
TABLE:	
	END