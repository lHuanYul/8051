GLODEF:	//GLOBAL ADRESS
	CONTROLDEUID	EQU	001H
	CONTROLCDSTR	EQU	037H
	DOORDEUID	EQU	002H
	DOORMOTION	EQU	020H
	CLOCKDEUID	EQU	003H
	CLOCKSMODE	EQU	020H
	CLOCKMONTH	EQU	030H
	CLOCKDATE	EQU	031H
	CLOCKHOUR	EQU	032H
	CLOCKMINUTE	EQU	033H
	CLOCKALM01M	EQU	040H
	CLOCKALM01H	EQU	041H
	CLOCKALM02M	EQU	042H
	CLOCKALM02H	EQU	043H
	CLOCKALM03M	EQU	044H
	CLOCKALM03H	EQU	045H
	CLOCKALM04M	EQU	046H
	CLOCKALM04H	EQU	047H
	WINDOWDEUID	EQU	004H
	WINDOWMOTION	EQU	020H
	RINGDEUID	EQU	005H
	RINGMOTION	EQU	020H
	RINGSNONCH	EQU	038H
	//SERIAL SETUP
	;DEVICEID	EQU	0XXH
	CANRETCODE	EQU	0FEH
	CNTRETCODE	EQU	0FFH
	REPLACECODE	EQU	000H
	CLRCODE		EQU	001H
	SETBCODE	EQU	002H
	CPLCODE		EQU	003H
	SPRSERIAL	EQU	P3
	SPBSERIALTR	EQU	SPRSERIAL.2
	STATE		EQU	070H
	MOTION		EQU	071H
	POSITION	EQU	072H
	STORESSTART	EQU	078H
	STORESEND	EQU	07FH
	STORE0START	EQU	060H
	STORE1START	EQU	068H
	STORE2START	EQU	050H
	STORE3START	EQU	058H
	FLSSERIALMO	EQU	02EH
	FLBSERIALRET	EQU	FLSSERIALMO.0
	FLSSERIAL	EQU	02FH
	FLBRUNEMPTY	EQU	FLSSERIAL.0
	FLBWRITING	EQU	FLSSERIAL.1
	FLBSTORESTR	EQU	FLSSERIAL.2
	FLBSTORE0TR	EQU	FLSSERIAL.4
	FLBSTORE1TR	EQU	FLSSERIAL.5
	FLBSTORE2TR	EQU	FLSSERIAL.6
	FLBSTORE3TR	EQU	FLSSERIAL.7
	SFRPORT0	EQU	080H
	SFRPORT1	EQU	090H
	SFRPORT2	EQU	0A0H
	//DEFINE TIMER 2 (PWM)
	T2CON		EQU	0C8H
	TF2		EQU	T2CON.7
	TR2		EQU	T2CON.2
	CPRL2		EQU	T2CON.0
	RCAP2L		EQU	0CAH
	RCAP2H		EQU	0CBH
	TL2		EQU	0CCH
	TH2		EQU	0CDH
	ET2		EQU	IE.5
DEUDEF:	//DEFINE CONST
	DEVICEID	EQU	004H
	ALLOPEN		EQU	00000001B ;01
	BWTTENOH	EQU	00000011B ;03
	WHENMIDDLE	EQU	00000111B ;07
	BWTTENCH	EQU	00001111B ;0F
	ALLCLOSE	EQU	00011111B ;1F
	CLOSETIME	EQU	020
	OPENTIME	EQU	010
	STOPTIME	EQU	000
	//DEFINE ADRESS
	OPSNORMAL	EQU	P0
	OPBMOTOR	EQU	OPSNORMAL.0
	IPSBUTTONS	EQU	P1
	IPBBUTOPEN	EQU	IPSBUTTONS.0
	IPBBUMIDDDLE	EQU	IPSBUTTONS.1
	IPBBUTCLOSE	EQU	IPSBUTTONS.2
	IPBBUTSTOP	EQU	IPSBUTTONS.3
	IPSCHECKPO	EQU	P2
	IPBCLOSETRI	EQU	IPSCHECKPO.0
	IPBMIDLTRI	EQU	IPSCHECKPO.1
	IPBOPENTRI	EQU	IPSCHECKPO.2
	FLSROTMOT	EQU	020H	;GLOBAL
	FLBROTCLOSE	EQU	FLSROTMOT.0
	FLBROTMIDDLE	EQU	FLSROTMOT.1
	FLBROTOPEN	EQU	FLSROTMOT.2
	FLBROTSTOP	EQU	FLSROTMOT.3
	FLSOTHER	EQU	02AH
	FLBROTMIDTRI	EQU	FLSOTHER.0
	FLBBUTPRESS	EQU	FLSOTHER.7
	TIMETICK	EQU	030H
	TIMECHNUM	EQU	031H
	TIMECHNUMR	EQU	032H
	ROTPOSLAST	EQU	034H
	ROTPOSNOW	EQU	035H
	ORG	0000H
		LJMP	START
	ORG	001BH
		LJMP	EAET1
	ORG	0023H
		LJMP	DSPSTA
	ORG	0040H
START:		LCALL	DSRSET
	//NORMAL SETUP
		MOV	TMOD, #00100001B
		MOV	TH1, #09CH
		MOV	TL1, TH1
		MOV	IPSCHECKPO, #0FFH
		MOV	IPSBUTTONS, #0FFH
		MOV	OPSNORMAL, #0FFH
		MOV	ROTPOSLAST, #0F0H
		MOV	ROTPOSNOW, #0F0H
		MOV	FLSROTMOT, #000H
		MOV	FLSOTHER, #000H
		MOV	TIMETICK, #000H
		MOV	ROTPOSNOW, #000H
		MOV	ROTPOSLAST, #WHENMIDDLE
		MOV	TIMECHNUM, #CLOSETIME
		SETB	ET1
		SETB	EA
		SETB	TR1
MALOOP:		LCALL	DSSMOV
		JNB	FLBSERIALRET, DSMPEN
		CLR	FLBSERIALRET
		MOV	R1, #CONTROLDEUID
		MOV	R2, #000H
		MOV	R3, #CONTROLCDSTR
		MOV	R4, ROTPOSNOW
		MOV	R5, #CNTRETCODE
		LCALL	DSSWRI
	//INPUT
		;CLOSE
	DSMPEN:	JNB	IPBBUTCLOSE, BUCLOT
		JBC	FLBROTCLOSE, BUCLOS
		AJMP	BUCLOE
	BUCLOT:	JNB	FLBBUTPRESS, BUCLOS
		AJMP	BUTEND
	BUCLOS:	MOV	TIMECHNUM, #CLOSETIME
		MOV	FLSROTMOT, #000
		AJMP	BUTPRE
		;OPEN
	BUCLOE:	JNB	IPBBUTOPEN, BUOPET
		JBC	FLBROTOPEN, BUOPES
		AJMP	BUOPEE
	BUOPET:	JNB	FLBBUTPRESS, BUOPES
		AJMP	BUTEND
	BUOPES:	MOV	TIMECHNUM, #OPENTIME
		MOV	FLSROTMOT, #000
		AJMP	BUTPRE
		;STOP
	BUOPEE:	JNB	IPBBUTSTOP, BUSTOT
		JBC	FLBROTSTOP, BUSTOS
		AJMP	BUSTOE
	BUSTOT:	JNB	FLBBUTPRESS, BUSTOS
		AJMP	BUTEND
	BUSTOS:	MOV	TIMECHNUM, #STOPTIME
		MOV	FLSROTMOT, #000
		AJMP	BUTPRE
		;MIDDLE
	BUSTOE:	JNB	IPBBUMIDDDLE, BUMIDT
		JBC	FLBROTMIDDLE, BUMIDS
		AJMP	BUMIDE
	BUMIDT:	JNB	FLBBUTPRESS, BUMIDS
		AJMP	BUTEND
	BUMIDS:	SETB	FLBROTMIDTRI
		MOV	FLSROTMOT, #000
		MOV	A, ROTPOSNOW
		CJNE	A, #ALLOPEN, BUMID0
		AJMP	BUMID1
	BUMID0:	CJNE	A, #BWTTENOH, BUMID2
	BUMID1:	MOV	TIMECHNUM, #CLOSETIME
		AJMP	BUTPRE
	BUMID2:	CJNE	A, #BWTTENCH, BUMID3
		AJMP	BUMID4
	BUMID3:	CJNE	A, #ALLCLOSE, BUMIDC
	BUMID4:	MOV	TIMECHNUM, #OPENTIME
	BUMIDC:	AJMP	BUTPRE
		//IF NONE PRESS
	BUMIDE:	CLR	FLBBUTPRESS
		AJMP	BUTEND
		//IF ANY PRESS
	BUTPRE:	SETB	FLBBUTPRESS
BUTEND:	//POSION CHECK
		JB	IPBCLOSETRI, CHECLE
		MOV	ROTPOSLAST, #ALLCLOSE
		MOV	ROTPOSNOW, #ALLCLOSE
		MOV	A, TIMECHNUM
		CJNE	A, #CLOSETIME, CHECEN
		MOV	TIMECHNUM, #STOPTIME
		CLR	FLBROTMIDTRI
		AJMP	CHECEN
	CHECLE:	JB	IPBOPENTRI, CHEOPE
		MOV	ROTPOSLAST, #ALLOPEN
		MOV	ROTPOSNOW, #ALLOPEN
		MOV	A, TIMECHNUM
		CJNE	A, #OPENTIME, CHECEN
		MOV	TIMECHNUM, #STOPTIME
		CLR	FLBROTMIDTRI
		AJMP	CHECEN
	CHEOPE:	JB	IPBMIDLTRI, CHEMIE
		MOV	ROTPOSLAST, #WHENMIDDLE
		MOV	ROTPOSNOW, #WHENMIDDLE
		JNB	FLBROTMIDTRI, CHECEN
		CLR	FLBROTMIDTRI
		MOV	TIMECHNUM, #STOPTIME
		AJMP	CHECEN
	CHEMIE:	MOV	A, ROTPOSLAST
		CJNE	A, #ALLCLOSE, CHMI00
		MOV	ROTPOSNOW, #BWTTENCH
		AJMP	CHECEN
	CHMI00:	CJNE	A, #ALLOPEN, CHMI01
		MOV	ROTPOSNOW, #BWTTENOH
		AJMP	CHECEN
	CHMI01:	CJNE	A, #WHENMIDDLE, CHECEX
		MOV	A, TIMECHNUM
		CJNE	A, #CLOSETIME, CHMI10
		MOV	ROTPOSNOW, #BWTTENCH
		AJMP	CHECEN
	CHMI10:	CJNE	A, #OPENTIME, CHMI11
		MOV	ROTPOSNOW, #BWTTENOH
		AJMP	CHECEN
	CHMI11:	MOV	ROTPOSNOW, #WHENMIDDLE
		AJMP	CHECEN
	CHECEX:	MOV	ROTPOSLAST, #WHENMIDDLE
		MOV	TIMECHNUM, #CLOSETIME
CHECEN:	
	MALOEN:	LJMP	MALOOP
EAET1:		PUSH	ACC
		PUSH	PSW
		CLR	TF1
		MOV	A, TIMETICK
		CJNE	A, TIMECHNUMR, EAET10
		CLR	OPBMOTOR
		AJMP	EAET1E
	EAET10:	CJNE	A, #200, EAET1E
		MOV	TIMETICK, #000
		SETB	OPBMOTOR
		MOV	A, TIMECHNUM
		MOV	TIMECHNUMR, A
	EAET1E:	INC	TIMETICK
		POP	PSW
		POP	ACC
		RETI
DSPSTA:		PUSH	ACC
		PUSH	PSW
		PUSH	000H
	//CHECK TI/RI
		JBC	RI, DSPRST
		CLR	TI
		LJMP	DSPSST
	//RECEIVE PROCESS
	DSPRST:	MOV	R0, STATE
		MOV	A, SBUF
		//RECEIVE DEPUTY CHECK
		CJNE	R0, #000H, DSPRMO
		CJNE	A, #DEVICEID, DSPRCN
		MOV	STATE, #001H
		CLR	SM2
	DSPRCN:	LJMP	DSPEND
		//RECEIVE MOTION
	DSPRMO:	CJNE	R0, #001H, DSPRPO
		;IF CAN SEND
		CJNE	A, #CANRETCODE, DSPRM0
		;IF WRITTING
		JNB	FLBWRITING, DSPSIT
		LJMP	DSPIWR
	DSPSIT:	LJMP	DSPSID
		;IF CANT SEND
	DSPRM0:	CJNE	A, #CNTRETCODE, DSPRM1
		MOV	STATE, #000H
		SETB	SM2
		LJMP	DSPEND
		;MOTION STORE
	DSPRM1:	MOV	STATE, #002H
		MOV	MOTION, A
		LJMP	DSPEND
		//RECEIVE POSITION
	DSPRPO:	CJNE	R0, #002H, DSPRVL
		MOV	STATE, #003H
		MOV	POSITION, A
		LJMP	DSPEND
		//RECEIVE VALUE
	DSPRVL:	CJNE	R0, #003H, DSPRER
		MOV	STATE, #001H
		AJMP	DSPRVN
		//RECEIVE ERROR
	DSPRER:	MOV	STATE, #00FH
		LJMP	DSPEND
		//VALUE WRITE
	DSPRVN:	PUSH	001H
		MOV	R0, MOTION
		MOV	R1, POSITION
		;SFRPORT0 WRITE
	DSPRP0:	CJNE	R1, #SFRPORT0, DSPRP1
		CJNE	R0, #REPLACECODE, DSPR00	;REPLACE VALUE
		MOV	SFRPORT0, A
		LJMP	DSPRVE
	DSPR00:	CJNE	R0, #CLRCODE, DSPR01	;AND VALUE (CLR
		ANL	A, SFRPORT0
		MOV	SFRPORT0, A
		LJMP	DSPRVE
	DSPR01:	CJNE	R0, #SETBCODE, DSPR02	;OR VALUE (SETB
		ORL	A, SFRPORT0
		MOV	SFRPORT0, A
		LJMP	DSPRVE
	DSPR02:	CJNE	R0, #CPLCODE, DSPR0E	;XOR VALUE (CPL
		XRL	A, SFRPORT0
		MOV	SFRPORT0, A
	DSPR0E:	LJMP	DSPRVE
		;SFRPORT1 WRITE
	DSPRP1:	CJNE	R1, #SFRPORT2, DSPRP2
		CJNE	R0, #REPLACECODE, DSPR10	;REPLACE VALUE
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR10:	CJNE	R0, #CLRCODE, DSPR11	;AND VALUE (CLR
		ANL	A, SFRPORT2
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR11:	CJNE	R0, #SETBCODE, DSPR12	;OR VALUE (SETB
		ORL	A, SFRPORT2
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR12:	CJNE	R0, #CPLCODE, DSPR1E	;XOR VALUE (CPL
		XRL	A, SFRPORT2
		MOV	SFRPORT2, A
	DSPR1E:	LJMP	DSPRVE
		;SFRPORT2 WRITE
	DSPRP2:	CJNE	R1, #SFRPORT2, DSPREX
		CJNE	R0, #REPLACECODE, DSPR20	;REPLACE VALUE
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR20:	CJNE	R0, #CLRCODE, DSPR21	;AND VALUE (CLR
		ANL	A, SFRPORT2
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR21:	CJNE	R0, #SETBCODE, DSPR22	;OR VALUE (SETB
		ORL	A, SFRPORT2
		MOV	SFRPORT2, A
		LJMP	DSPRVE
	DSPR22:	CJNE	R0, #CPLCODE, DSPR2E	;XOR VALUE (CPL
		XRL	A, SFRPORT2
		MOV	SFRPORT2, A
	DSPR2E:	LJMP	DSPRVE
		;OTHER WRITE
	DSPREX:	CJNE	R0, #REPLACECODE, DSPRV9
		MOV	@R1, A
		AJMP	DSPRVE
	DSPRV9:	CJNE	R0, #CLRCODE, DSPRVA
		ANL	A, @R1	;CLR 1011
		MOV	@R1, A
		AJMP	DSPRVE
	DSPRVA:	CJNE	R0, #SETBCODE, DSPRVB
		ORL	A, @R1	;SETB 0100
		MOV	@R1, A
		AJMP	DSPRVE
	DSPRVB:	CJNE	R0, #CPLCODE, DSPRVE
		XRL	A, @R1	;CPL 0100
		MOV	@R1, A
		AJMP	DSPRVE
	DSPRVE:	MOV	MOTION, #0FFH
		MOV	POSITION, #0FFH
		POP	001H
		LJMP	DSPEND
	//SEND PROCESS START
		//RUN EMPTY
	DSPSST:	JNB	FLBRUNEMPTY, DSPSMO
		CLR	FLBRUNEMPTY
		AJMP	DSPEND
		//SEND ID
	DSPSID:	MOV	STATE, #011H
		MOV	POSITION, #STORESSTART+1
		LCALL	DL400C
		MOV	SBUF, STORESSTART
		LCALL	DL400C
		LJMP	DSPEND
		//IF WRITING
	DSPIWR:	MOV	STATE, #01AH
		LCALL	DL400C
		MOV	SBUF, #000
		LCALL	DL400C
		LJMP	DSPEND
		//SEND MOTION
	DSPSMO:	MOV	R0, STATE
		CJNE	R0, #011H, DSPSPO
		MOV	STATE, #012H
		;IF REACH END
		MOV	R0, POSITION
		CJNE	R0, #STORESEND, DSPSM0
		AJMP	DSPSFI
		;IF SEND FINISH
	DSPSM0:	MOV	A, @R0
		CJNE	A, #CANRETCODE, DSPSM1
		AJMP	DSPSFI
	DSPSM1:	CJNE	A, #CNTRETCODE, DSPSNM
		AJMP	DSPSFI
		//SEND POSITION AND VALUE
	DSPSPO:	CJNE	R0, #012H, DSPSVA
		MOV	STATE, #013H
		AJMP	DSPSNM
	DSPSVA:	CJNE	R0, #013H, DSPSWR
		MOV	STATE, #011H
		AJMP	DSPSNM
		//IF WRITING SEND CNTRETCODE
	DSPSWR:	CJNE	R0, #01AH, DSPSER
		AJMP	DSPSF0
		//SEND ERROR
	DSPSER:	MOV	STATE, #01FH
		AJMP	DSPEND
		//SEND NORMAL
	DSPSNM:	MOV	R0, POSITION
		INC	POSITION
		MOV	SBUF, @R0
		LCALL	DL400C
		AJMP	DSPEND
		//SEND FINISH
	DSPSFI:	MOV	R0, #STORESSTART
		LCALL	DSSCLR
		CLR	FLBSTORESTR
	DSPSF0:	MOV	STATE, #000H
		MOV	POSITION, #0FFH
		SETB	FLBRUNEMPTY
		SETB	SM2
		MOV	SBUF, #CNTRETCODE
	DSPEND:	POP	000H
		POP	PSW
		POP	ACC
		RETI
DSRSET:		MOV	SCON, #10110000B
		SETB	ES
		MOV	STATE, #000H
		MOV	MOTION, #0FFH
		MOV	POSITION, #0FFH
		MOV	FLSSERIALMO, #000H
		MOV	FLSSERIAL, #000H
		MOV	R0, #STORESSTART
		LCALL	DSSCLR
		MOV	R0, #STORE0START
		LCALL	DSSCLR
		MOV	R0, #STORE1START
		LCALL	DSSCLR
		MOV	R0, #STORE2START
		LCALL	DSSCLR
		MOV	R0, #STORE3START
		LCALL	DSSCLR
		MOV	SPRSERIAL, #0FFH
DSSCLR:		MOV	A, #STORESEND-STORESSTART+1
	STOCLL:	MOV	@R0, #CNTRETCODE
		INC	R0
		DJNZ	ACC, STOCLL
		RET
DSSMOV:		;SERIAL STORE MOVE 0>S
		JB	FLBSTORESTR, DSSSEN
		JNB	FLBSTORE0TR, DSSSEN
		MOV	R0, #STORESSTART
		MOV	R1, #STORE0START
		MOV	R2, #STORESEND+1-STORESSTART
		SETB	FLBWRITING
		SETB	FLBSTORESTR
	DSSSLO:	MOV	A, @R1
		MOV	@R0, A
		INC	R0
		INC	R1
		DJNZ	R2, DSSSLO
		MOV	R0, #STORE0START
		LCALL	DSSCLR
		CLR	FLBSTORE0TR
		CLR	FLBWRITING
	DSSSEN:	JNB	FLBSTORESTR, DSSTRI
		CLR	SPBSERIALTR
		AJMP	DSSTRE
	DSSTRI:	SETB	SPBSERIALTR
		//SERIAL STORE MOVE 1>0
	DSSTRE:	JB	FLBSTORE0TR, DSS0EN
		JNB	FLBSTORE1TR, DSS0EN
		SETB	FLBSTORE0TR
		CLR	FLBSTORE1TR
		MOV	R0, #STORE0START
		MOV	R1, #STORE1START
		MOV	R2, #STORESEND+1-STORESSTART
	DSS0LO:	MOV	A, @R1
		MOV	@R0, A
		INC	R0
		INC	R1
		DJNZ	R2, DSS0LO
		MOV	R0, #STORE1START
		LCALL	DSSCLR
	DSS0EN:	//SERIAL STORE MOVE 2>1
		JB	FLBSTORE1TR, DSS1EN
		JNB	FLBSTORE2TR, DSS1EN
		SETB	FLBSTORE1TR
		CLR	FLBSTORE2TR
		MOV	R0, #STORE1START
		MOV	R1, #STORE2START
		MOV	R2, #STORESEND+1-STORESSTART
	DSS1LO:	MOV	A, @R1
		MOV	@R0, A
		INC	R0
		INC	R1
		DJNZ	R2, DSS1LO
		MOV	R0, #STORE2START
		LCALL	DSSCLR
	DSS1EN:	//SERIAL STORE MOVE 3>2
		JB	FLBSTORE2TR, DSS2EN
		JNB	FLBSTORE3TR, DSS2EN
		SETB	FLBSTORE2TR
		CLR	FLBSTORE3TR
		MOV	R0, #STORE2START
		MOV	R1, #STORE3START
		MOV	R2, #STORESEND+1-STORESSTART
	DSS2LO:	MOV	A, @R1
		MOV	@R0, A
		INC	R0
		INC	R1
		DJNZ	R2, DSS2LO
		MOV	R0, #STORE3START
		LCALL	DSSCLR
	DSS2EN:	RET
DSSWRI:		JB	FLBSTORE0TR, STPOS0
		MOV	R0, #STORE0START
		SETB	FLBSTORE0TR
		AJMP	DSSWSE
	STPOS0:	JB	FLBSTORE1TR, STPOS1
		MOV	R0, #STORE1START
		SETB	FLBSTORE1TR
		AJMP	DSSWSE
	STPOS1:	JB	FLBSTORE2TR, STPOS2
		MOV	R0, #STORE2START
		SETB	FLBSTORE2TR
		AJMP	DSSWSE
	STPOS2:	JB	FLBSTORE3TR, STPOSE
		MOV	R0, #STORE3START
		SETB	FLBSTORE3TR
		AJMP	DSSWSE
	STPOSE:	MOV	R0, #0F0H
		RET
	DSSWSE:	MOV	@R0, 001H
		INC	R0
		MOV	@R0, 002H
		INC	R0
		MOV	@R0, 003H
		INC	R0
		MOV	@R0, 004H
		INC	R0
		MOV	@R0, 005H
		INC	R0
		MOV	@R0, 006H
		INC	R0
		MOV	@R0, 007H
		INC	R0
		MOV	@R0, #CNTRETCODE
		RET
DL400C:		PUSH	007H
		MOV	R7, #020
		DJNZ	R7, $
		POP	007H
		RET
TABLE:	
	END